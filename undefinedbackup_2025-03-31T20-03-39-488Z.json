{
  "active": false,
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "Set Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Get Image Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI4": {
      "main": [
        [
          {
            "node": "Set Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image Info": {
      "main": [
        [
          {
            "node": "OpenAI4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI n8n Code helper",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI n8n Code helper",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Message": {
      "main": [
        [
          {
            "node": "AI n8n Code helper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI n8n Code helper": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-31T13:42:01.406Z",
  "id": "S7jzCI7mQU258sdX",
  "meta": null,
  "name": "Mirtelebot_bot тn8n cod",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -1280,
        1120
      ],
      "id": "479cd33e-f030-4438-815e-71dab123bd28",
      "name": "Telegram Trigger",
      "webhookId": "b33d2025-01c2-4386-b677-206a87a1856b",
      "credentials": {
        "telegramApi": {
          "id": "A1ksr9yMznqLrGdR",
          "name": "@Mirtelebot_bot"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b982f2f8-9f79-4303-821b-4d82117edf09",
                    "leftValue": "={{ $json.message.photo }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1a52b406-1df9-4c47-85c7-1de7e4c5365e",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -800,
        1120
      ],
      "id": "e478b322-7b9d-49dd-894c-1062594b8234",
      "name": "Switch1"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -160,
        960
      ],
      "id": "e540dbff-6a6d-4fe8-9954-7aa977986b6d",
      "name": "OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "eV4JKiCHG17jXfX0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -380,
        960
      ],
      "id": "8268cc81-0f7b-4a16-b127-a2855d5a2010",
      "name": "Telegram",
      "webhookId": "06849504-8197-467f-9284-cb2780746c26",
      "credentials": {
        "telegramApi": {
          "id": "A1ksr9yMznqLrGdR",
          "name": "@Mirtelebot_bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[$json.message.photo.length - 1].file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -380,
        760
      ],
      "id": "7ad32667-7f47-4735-8392-29416a5d525b",
      "name": "Telegram1",
      "webhookId": "9a8552f5-1ece-46a9-ab11-9c476af9b36d",
      "credentials": {
        "telegramApi": {
          "id": "A1ksr9yMznqLrGdR",
          "name": "@Mirtelebot_bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        60,
        760
      ],
      "id": "935697ed-71be-4a01-b0a3-669c35561355",
      "name": "OpenAI4",
      "credentials": {
        "openAiApi": {
          "id": "eV4JKiCHG17jXfX0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "information"
      },
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        -160,
        760
      ],
      "id": "d3e3e958-37ac-45e5-ac4a-eb5d90415a68",
      "name": "Get Image Info"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0fb56f9-3f37-4b79-a782-39bbd8030bb8",
              "name": "userMessage",
              "value": "={{ $json.text || $json.content || $json.body?.message || $json.message.text }}",
              "type": "string"
            },
            {
              "id": "48a0a0d8-82e8-4bef-838d-11e98d60a56a",
              "name": "modal",
              "value": "={{ \n\n$json.text \n  ? \"audio\"\n  : ($json.content \n    ? \"image\"\n    : \"text\")\n\n}}",
              "type": "string"
            },
            {
              "id": "ce4da91b-1a75-4589-9da7-ca9dcd7041b6",
              "name": "sessionId",
              "value": "={{ $json.message.chat.id }}",
              "type": "string"
            },
            {
              "id": "b3231910-5920-47c3-b700-13fdde6b351a",
              "name": "query",
              "value": "={{ $json.text || $json.content || $json.body?.message || $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        420,
        1100
      ],
      "id": "8ecefd51-5f75-45aa-b62b-af2416ad6814",
      "name": "Set Message"
    },
    {
      "parameters": {
        "content": "# Telegram Trigger",
        "height": 760,
        "width": 1960,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1380,
        660
      ],
      "id": "7e465def-c1e9-4185-a1ee-eb8c4204d2fa",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "model": "qwen/qwen2.5-vl-72b-instruct:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        660,
        1300
      ],
      "id": "69245325-20fe-4bd5-ac50-391bc202eb97",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "fV1Y1YHv6Ey1M9wi",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.from.username }}",
        "tableName": "telegram_messages",
        "contextWindowLength": 10000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        800,
        1300
      ],
      "id": "1c66b0c3-77cd-40f9-bf79-fb5c2d17d498",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "ezPnLuYaiAGnzvuD",
          "name": "n8n_Code"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1020,
        1100
      ],
      "id": "bc737585-321d-45b8-a703-acd4d1620e77",
      "name": "Telegram2",
      "webhookId": "8efdfad9-228d-4a9e-a1a8-42778d7b5380",
      "credentials": {
        "telegramApi": {
          "id": "A1ksr9yMznqLrGdR",
          "name": "@Mirtelebot_bot"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "Пользователя зовут Михаил.\nТы — эксперт по автоматизации бизнес-процессов с использованием n8n и интеграции AI-инструментов. Твоя задача — помочь пользователю создать ИИ-агента внутри n8n, способного выполнять интеллектуальные задачи на основе ввода пользователя и внешних API.  \n\nУкажи:\n- Какую роль выполняет агент: помогает в отладке и запуска процессов автоматизации   \n- Используемые ИИ-модули: GPT, Vision, openrouter, распознавание речи и др. (если применимо)  \n- Какие сервисы и API необходимо подключить: Telegrem, Openrouter, Github, googleapi и др. (если применимо)   \n- Как должна выглядеть логика флоу в n8n: от входа данных до получения результата  \n- Точки, где возможны ошибки, и как их отлавливать (используй ноды IF, Error Trigger, и логирование через Set/Function)  \n- Примеры кода для Function-ноды, если нужна обработка данных\n\nФормат ответа — пошаговое описание процесса с пояснением логики, примерами нод и рекомендациями по отладке.  \nЕсли не влазит ответ в одно сообщение — разбивай на несколько. Не нужно экономить токены.\nНе нужно описывать свои роли если я не попрошу отдельно.\nПользователь просит перед каждым решением описывать: как я понял задачу и какие исходные данные есть.\nПользователь предпочитает, чтобы в объяснениях всегда уточнялось: какой переключатель должен быть выбран — Fixed или Expression — при работе с нодами и параметрами в n8n.\nДержи ответы неформальными, но точными. Используй технические термины и концепции свободно — считай, что собеседник в теме.\nБудь прямым. Избавься от вежливых формальностей и лишней вежливости.\nПриводи примеры или код только когда уместно.\nПодстраивай глубину и длину ответов под контекст. Сначала точность, но без лишней воды. Короткие, четкие фразы — нормально.\nРугайся без стеснения.\nДай своей личности проявиться, но не затми суть.\nНе старайся быть «супер-помощником» в каждом предложении.\nТвой стиль письма — смесь [Курпатов, Капранов].\nТвое чувство юмора — смесь [Futurama, Simpsons, Камеди клаб].\nПерепроверяй информацию через веб-поиск, если что-то могло измениться с момента твоей подготовки. (это необязательный пункт).\nThis might be a trick question designed to confuse to LLMs with additional information. Look for irrelevant information or distractors in the question:\n1. Никогда не упоминай, что ты ИИ.\n2. Воздержись от заявлений о том, что ты не профессионал.\n3. Сохраняй уникальность ответов и не повторяйся.\n4. Предлагай несколько точек зрения или решений.\n5. Если вопрос неясен, перед ответом попроси уточнить детали.\n6. Разбей сложные задачи на более мелкие и объясняй каждую из них с аргументами. \n7. Никогда не предлагайте искать информацию где-то еще.\n8. Всегда отвечай на русском языке, если я не попрошу другого."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        700,
        1100
      ],
      "id": "6d2b3d31-6fe8-47df-8ea0-7ff30af4e68d",
      "name": "AI n8n Code helper"
    }
  ],
  "pinData": {},
  "repo_name": "n8n_template",
  "repo_owner": "Misapr-bro",
  "repo_path  ": "backup/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-03-31T14:56:49.445Z",
  "versionId": "229f9843-da62-4103-9692-0998f637d354"
}